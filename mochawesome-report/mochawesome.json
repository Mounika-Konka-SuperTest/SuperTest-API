{
  "stats": {
    "suites": 3,
    "tests": 2,
    "passes": 2,
    "pending": 0,
    "failures": 0,
    "start": "2025-07-06T11:10:47.810Z",
    "end": "2025-07-06T11:10:48.535Z",
    "duration": 725,
    "testsRegistered": 2,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "1746fbe3-9478-4610-adc6-81db42d3fa93",
      "title": "",
      "fullFile": "C:\\Users\\Mouni\\OneDrive\\Desktop\\APISuperTest\\Sample-Supertest\\SuperTest-API\\test\\FakerData.js",
      "file": "\\test\\FakerData.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "2b809d84-4e37-4dcf-81d5-656cdb3fd81e",
          "title": "API -Faker data using for test Users",
          "fullFile": "C:\\Users\\Mouni\\OneDrive\\Desktop\\APISuperTest\\Sample-Supertest\\SuperTest-API\\test\\FakerData.js",
          "file": "\\test\\FakerData.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Before tests start in \"API -Faker data using for test Users\"",
              "fullTitle": "API -Faker data using for test Users \"before all\" hook: Before tests start in \"API -Faker data using for test Users\"",
              "timedOut": false,
              "duration": 245,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// userID = await createRandomUser()\nuserID = await createRandomUserwithFakerLibrary(); // Using the new function to create a user with Faker\n console.log('Created user before hook '+userID); // Debug the user ID",
              "err": {},
              "uuid": "924637d7-f592-460f-bf00-a36b675ebd78",
              "parentUUID": "2b809d84-4e37-4dcf-81d5-656cdb3fd81e",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "7ad9ebae-ae48-4304-84af-d2ba3d9b40c5",
              "title": "POST - Creating a User with Faker libarary",
              "fullFile": "C:\\Users\\Mouni\\OneDrive\\Desktop\\APISuperTest\\Sample-Supertest\\SuperTest-API\\test\\FakerData.js",
              "file": "\\test\\FakerData.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "create a post for that user",
                  "fullTitle": "API -Faker data using for test Users POST - Creating a User with Faker libarary create a post for that user",
                  "timedOut": false,
                  "duration": 165,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "// 2. Create post for that user\nconst postData= {\n     user_id: Number(userID), // Use the user ID from the previous step\n     title: faker.lorem.sentence(), // Generate a random title      \n     body: faker.lorem.paragraph(), // Generate a random body,\n    }\nconst postResponse= await request.\npost('v2/posts').\nset('Authorization', `Bearer ${TOKEN}`).\nsend(postData);\nexpect(postResponse.body).to.deep.include({\n    user_id: Number(userID),\n    title: postData.title,\n     body: postData.body\n});\n    postID = postResponse.body.id; // Store the post ID for later use\n    console.log(postID); // Debug the post ID",
                  "err": {},
                  "uuid": "12ec83a4-b0d9-497f-a60c-181f214caefd",
                  "parentUUID": "7ad9ebae-ae48-4304-84af-d2ba3d9b40c5",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "12ec83a4-b0d9-497f-a60c-181f214caefd"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 165,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "9fdaeebf-4ad3-4546-ad58-66aa865eeda9",
              "title": "GET - Verifying the User",
              "fullFile": "C:\\Users\\Mouni\\OneDrive\\Desktop\\APISuperTest\\Sample-Supertest\\SuperTest-API\\test\\FakerData.js",
              "file": "\\test\\FakerData.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "GET request test/ Verifying ID to the newly created user",
                  "fullTitle": "API -Faker data using for test Users GET - Verifying the User GET request test/ Verifying ID to the newly created user",
                  "timedOut": false,
                  "duration": 304,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "await request.\nget(`v2/posts`).\nset('Authorization', `Bearer ${TOKEN}`).\nexpect(200);",
                  "err": {},
                  "uuid": "c7d96974-798d-4c72-a0b2-61a8686c30cf",
                  "parentUUID": "9fdaeebf-4ad3-4546-ad58-66aa865eeda9",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "c7d96974-798d-4c72-a0b2-61a8686c30cf"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 304,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "11.3.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": null,
      "version": "6.2.0"
    }
  }
}